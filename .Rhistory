roi.prob.aid = "probAid_assumed",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country")
source("https://raw.githubusercontent.com/itpir/geoSIMEX/master/R/geoSIMEX.R")
library(devtools)
install_github("itpir/geoSIMEX")
library(geoSIMEX)
##### Generating Country-Level Dataset #####
numSubcounties <- 120
numSubcountyInCounty <- 2
numCountyInDistrict <- 3
numDistrictInRegion <- 2
N <- numSubcounties
subcounty <- 1:N
county <- rep(1:(N/numSubcountyInCounty), each=numSubcountyInCounty)
district <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict)), each=(numSubcountyInCounty*numCountyInDistrict))
region <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion)), each=(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion))
country <- 1
subcountyArea <- runif(N)
probAid_assumed <- runif(N)
subcountyData <- as.data.frame(cbind(subcounty,county,district,region,country,probAid_assumed,subcountyArea))
##### Creating Aid Dataset #####
numberProjects = 50
aidData <- as.data.frame(matrix(NA,nrow=numberProjects,ncol=3))
names(aidData) <- c("aid","trueSubcounty","PC")
aidData$aid <- runif(nrow(aidData)) * 100
probAid_true <- runif(N)
aidData$trueSubcounty <- sample(size=numberProjects,x=c(1:N), prob=probAid_true, replace=TRUE)
aidData$PC  <- sample(size=numberProjects, x=c(1,2,3,4,6), prob=runif(5), replace=TRUE)
# True Aid
aidData$PC.1s <- 1
subcountyData$trueAid <- expected_aid_ROI(aidData=aidData,
roiData=subcountyData,
roi.prob.aid="probAid_assumed",
aid.project.amount="aid",
aid.precision.code="PC.1s",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country",
aid.pc1.centroid.name="trueSubcounty")
# Wealth - 1 to 1 relation with aid
subcountyData$wealth <- subcountyData$trueAid + runif(nrow(subcountyData))
# Expected Value Aid
subcountyData$expectedAid <- expected_aid_ROI(aidData=aidData,
aid.project.amount="aid",
aid.precision.code="PC",
aid.pc1.centroid.name="trueSubcounty",
roiData=subcountyData,
roi.prob.aid="probAid_assumed",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country")
naive_model <- lm(wealth ~ expectedAid, data=subcountyData)
geoSIMEX_model <- geoSIMEX(model = naive_model,
geoSIMEXvariable = "expectedAid",
aidData = aidData,
aid.project.amount = "aid",
aid.pc1.centroid.name="trueSubcounty",
aid.precision.code="PC",
roiData = subcountyData,
roi.area = "subcountyArea",
roi.prob.aid = "probAid_assumed",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country")
##### Analyzing Results #####
summary(naive_model)
summary(geoSIMEX_model)
plot(geoSIMEX_model, variable="expectedAid")
plot(geoSIMEX_model, variable="expectedAid")
library(parallel)
source("https://raw.githubusercontent.com/itpir/geoSIMEX/master/R/geoSIMEX.R")
library(parallel)
##### Generating Country-Level Dataset #####
numSubcounties <- 120
numSubcountyInCounty <- 2
numCountyInDistrict <- 3
numDistrictInRegion <- 2
N <- numSubcounties
subcounty <- 1:N
county <- rep(1:(N/numSubcountyInCounty), each=numSubcountyInCounty)
district <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict)), each=(numSubcountyInCounty*numCountyInDistrict))
region <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion)), each=(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion))
country <- 1
subcountyArea <- runif(N)
probAid_assumed <- runif(N)
subcountyData <- as.data.frame(cbind(subcounty,county,district,region,country,probAid_assumed,subcountyArea))
##### Creating Aid Dataset #####
numberProjects = 50
aidData <- as.data.frame(matrix(NA,nrow=numberProjects,ncol=3))
names(aidData) <- c("aid","trueSubcounty","PC")
aidData$aid <- runif(nrow(aidData)) * 100
probAid_true <- runif(N)
aidData$trueSubcounty <- sample(size=numberProjects,x=c(1:N), prob=probAid_true, replace=TRUE)
aidData$PC  <- sample(size=numberProjects, x=c(1,2,3,4,6), prob=runif(5), replace=TRUE)
# True Aid
aidData$PC.1s <- 1
subcountyData$trueAid <- expected_aid_ROI(aidData=aidData,
roiData=subcountyData,
roi.prob.aid="probAid_assumed",
aid.project.amount="aid",
aid.precision.code="PC.1s",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country",
aid.pc1.centroid.name="trueSubcounty")
# Wealth - 1 to 1 relation with aid
subcountyData$wealth <- subcountyData$trueAid + runif(nrow(subcountyData))
# Expected Value Aid
subcountyData$expectedAid <- expected_aid_ROI(aidData=aidData,
aid.project.amount="aid",
aid.precision.code="PC",
aid.pc1.centroid.name="trueSubcounty",
roiData=subcountyData,
roi.prob.aid="probAid_assumed",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country")
naive_model <- lm(wealth ~ expectedAid, data=subcountyData)
geoSIMEX_model <- geoSIMEX(model = naive_model,
geoSIMEXvariable = "expectedAid",
aidData = aidData,
aid.project.amount = "aid",
aid.pc1.centroid.name="trueSubcounty",
aid.precision.code="PC",
roiData = subcountyData,
roi.area = "subcountyArea",
roi.prob.aid = "probAid_assumed",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country")
##### Analyzing Results #####
summary(naive_model)
summary(geoSIMEX_model)
plot(geoSIMEX_model, variable="expectedAid")
source("https://raw.githubusercontent.com/itpir/geoSIMEX/master/R/geoSIMEX.R")
library(parallel)
source("https://raw.githubusercontent.com/itpir/geoSIMEX/master/R/geoSIMEX.R")
library(parallel)
library(devtools)
install_github("itpir/geoSIMEX")
library(geoSIMEX)
numSubcounties <- 120
numSubcountyInCounty <- 2
numCountyInDistrict <- 3
numDistrictInRegion <- 2
N <- numSubcounties
subcounty <- 1:N
county <- rep(1:(N/numSubcountyInCounty), each=numSubcountyInCounty)
district <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict)), each=(numSubcountyInCounty*numCountyInDistrict))
region <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion)), each=(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion))
country <- 1
subcountyArea <- runif(N)
probAid_assumed <- runif(N)
subcountyData <- as.data.frame(cbind(subcounty,county,district,region,country,probAid_assumed,subcountyArea))
numberProjects = 50
aidData <- as.data.frame(matrix(NA,nrow=numberProjects,ncol=3))
names(aidData) <- c("aid","trueSubcounty","PC")
aidData$aid <- runif(nrow(aidData)) * 100
probAid_true <- runif(N)
aidData$trueSubcounty <- sample(size=numberProjects,x=c(1:N), prob=probAid_true, replace=TRUE)
aidData$PC  <- sample(size=numberProjects, x=c(1,2,3,4,6), prob=runif(5), replace=TRUE)
aidData$PC.1s <- 1
subcountyData$trueAid <- expected_aid_ROI(aidData=aidData,
roiData=subcountyData,
roi.prob.aid="probAid_assumed",
aid.project.amount="aid",
aid.precision.code="PC.1s",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country",
aid.pc1.centroid.name="trueSubcounty")
install_github("itpir/geoSIMEX")
install_github("itpir/geoSIMEX", force=T)
search()
library(geoSIMEX)
numSubcounties <- 120
numSubcountyInCounty <- 2
numCountyInDistrict <- 3
numDistrictInRegion <- 2
N <- numSubcounties
subcounty <- 1:N
county <- rep(1:(N/numSubcountyInCounty), each=numSubcountyInCounty)
district <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict)), each=(numSubcountyInCounty*numCountyInDistrict))
region <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion)), each=(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion))
country <- 1
subcountyArea <- runif(N)
probAid_assumed <- runif(N)
subcountyData <- as.data.frame(cbind(subcounty,county,district,region,country,probAid_assumed,subcountyArea))
numberProjects = 50
aidData <- as.data.frame(matrix(NA,nrow=numberProjects,ncol=3))
names(aidData) <- c("aid","trueSubcounty","PC")
aidData$aid <- runif(nrow(aidData)) * 100
probAid_true <- runif(N)
aidData$trueSubcounty <- sample(size=numberProjects,x=c(1:N), prob=probAid_true, replace=TRUE)
aidData$PC  <- sample(size=numberProjects, x=c(1,2,3,4,6), prob=runif(5), replace=TRUE)
aidData$PC.1s <- 1
subcountyData$trueAid <- expected_aid_ROI(aidData=aidData,
roiData=subcountyData,
roi.prob.aid="probAid_assumed",
aid.project.amount="aid",
aid.precision.code="PC.1s",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country",
aid.pc1.centroid.name="trueSubcounty")
subcountyData$trueAid <- geoSIMEX::expected_aid_ROI(aidData=aidData,
roiData=subcountyData,
roi.prob.aid="probAid_assumed",
aid.project.amount="aid",
aid.precision.code="PC.1s",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country",
aid.pc1.centroid.name="trueSubcounty")
subcountyData$wealth <- subcountyData$trueAid + runif(nrow(subcountyData))
subcountyData$expectedAid <- expected_aid_ROI(aidData=aidData,
aid.project.amount="aid",
aid.precision.code="PC",
aid.pc1.centroid.name="trueSubcounty",
roiData=subcountyData,
roi.prob.aid="probAid_assumed",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country")
subcountyData$expectedAid <- geoSIMEX::expected_aid_ROI(aidData=aidData,
aid.project.amount="aid",
aid.precision.code="PC",
aid.pc1.centroid.name="trueSubcounty",
roiData=subcountyData,
roi.prob.aid="probAid_assumed",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country")
naive_model <- lm(wealth ~ expectedAid, data=subcountyData)
geoSIMEX_model <- geoSIMEX(model = naive_model,
geoSIMEXvariable = "expectedAid",
aidData = aidData,
aid.project.amount = "aid",
aid.pc1.centroid.name="trueSubcounty",
aid.precision.code="PC",
roiData = subcountyData,
roi.area = "subcountyArea",
roi.prob.aid = "probAid_assumed",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country")
geoSIMEX_model <- geoSIMEX::geoSIMEX(model = naive_model,
geoSIMEXvariable = "expectedAid",
aidData = aidData,
aid.project.amount = "aid",
aid.pc1.centroid.name="trueSubcounty",
aid.precision.code="PC",
roiData = subcountyData,
roi.area = "subcountyArea",
roi.prob.aid = "probAid_assumed",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country")
library(devtools)
install_github("itpir/geoSIMEX")
library(geoSIMEX)
numSubcounties <- 120
numSubcountyInCounty <- 2
numCountyInDistrict <- 3
numDistrictInRegion <- 2
N <- numSubcounties
subcounty <- 1:N
county <- rep(1:(N/numSubcountyInCounty), each=numSubcountyInCounty)
district <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict)), each=(numSubcountyInCounty*numCountyInDistrict))
region <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion)), each=(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion))
country <- 1
subcountyArea <- runif(N)
probAid_assumed <- runif(N)
subcountyData <- as.data.frame(cbind(subcounty,county,district,region,country,probAid_assumed,subcountyArea))
numberProjects = 50
aidData <- as.data.frame(matrix(NA,nrow=numberProjects,ncol=3))
names(aidData) <- c("aid","trueSubcounty","PC")
aidData$aid <- runif(nrow(aidData)) * 100
probAid_true <- runif(N)
aidData$trueSubcounty <- sample(size=numberProjects,x=c(1:N), prob=probAid_true, replace=TRUE)
aidData$PC  <- sample(size=numberProjects, x=c(1,2,3,4,6), prob=runif(5), replace=TRUE)
aidData$PC.1s <- 1
subcountyData$trueAid <- expected_aid_ROI(aidData=aidData,
roiData=subcountyData,
roi.prob.aid="probAid_assumed",
aid.project.amount="aid",
aid.precision.code="PC.1s",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country",
aid.pc1.centroid.name="trueSubcounty")
library(devtools)
install_github("itpir/geoSIMEX")
library(geoSIMEX)
numSubcounties <- 120
numSubcountyInCounty <- 2
numCountyInDistrict <- 3
numDistrictInRegion <- 2
N <- numSubcounties
subcounty <- 1:N
county <- rep(1:(N/numSubcountyInCounty), each=numSubcountyInCounty)
district <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict)), each=(numSubcountyInCounty*numCountyInDistrict))
region <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion)), each=(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion))
country <- 1
subcountyArea <- runif(N)
probAid_assumed <- runif(N)
subcountyData <- as.data.frame(cbind(subcounty,county,district,region,country,probAid_assumed,subcountyArea))
numberProjects = 50
aidData <- as.data.frame(matrix(NA,nrow=numberProjects,ncol=3))
names(aidData) <- c("aid","trueSubcounty","PC")
aidData$aid <- runif(nrow(aidData)) * 100
probAid_true <- runif(N)
aidData$trueSubcounty <- sample(size=numberProjects,x=c(1:N), prob=probAid_true, replace=TRUE)
aidData$PC  <- sample(size=numberProjects, x=c(1,2,3,4,6), prob=runif(5), replace=TRUE)
aidData$PC.1s <- 1
subcountyData$trueAid <- expected_aid_ROI(aidData=aidData,
roiData=subcountyData,
roi.prob.aid="probAid_assumed",
aid.project.amount="aid",
aid.precision.code="PC.1s",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country",
aid.pc1.centroid.name="trueSubcounty")
library(devtools)
install_github("itpir/geoSIMEX")
library(geoSIMEX)
numSubcounties <- 120
numSubcountyInCounty <- 2
numCountyInDistrict <- 3
numDistrictInRegion <- 2
N <- numSubcounties
subcounty <- 1:N
county <- rep(1:(N/numSubcountyInCounty), each=numSubcountyInCounty)
district <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict)), each=(numSubcountyInCounty*numCountyInDistrict))
region <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion)), each=(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion))
country <- 1
subcountyArea <- runif(N)
probAid_assumed <- runif(N)
subcountyData <- as.data.frame(cbind(subcounty,county,district,region,country,probAid_assumed,subcountyArea))
numberProjects = 50
aidData <- as.data.frame(matrix(NA,nrow=numberProjects,ncol=3))
names(aidData) <- c("aid","trueSubcounty","PC")
aidData$aid <- runif(nrow(aidData)) * 100
probAid_true <- runif(N)
aidData$trueSubcounty <- sample(size=numberProjects,x=c(1:N), prob=probAid_true, replace=TRUE)
aidData$PC  <- sample(size=numberProjects, x=c(1,2,3,4,6), prob=runif(5), replace=TRUE)
library(devtools)
install_github("itpir/geoSIMEX")
library(geoSIMEX)
numSubcounties <- 120
numSubcountyInCounty <- 2
numCountyInDistrict <- 3
numDistrictInRegion <- 2
N <- numSubcounties
subcounty <- 1:N
county <- rep(1:(N/numSubcountyInCounty), each=numSubcountyInCounty)
district <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict)), each=(numSubcountyInCounty*numCountyInDistrict))
region <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion)), each=(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion))
country <- 1
subcountyArea <- runif(N)
probAid_assumed <- runif(N)
subcountyData <- as.data.frame(cbind(subcounty,county,district,region,country,probAid_assumed,subcountyArea))
numberProjects = 50
aidData <- as.data.frame(matrix(NA,nrow=numberProjects,ncol=3))
names(aidData) <- c("aid","trueSubcounty","PC")
aidData$aid <- runif(nrow(aidData)) * 100
probAid_true <- runif(N)
aidData$trueSubcounty <- sample(size=numberProjects,x=c(1:N), prob=probAid_true, replace=TRUE)
aidData$PC  <- sample(size=numberProjects, x=c(1,2,3,4,6), prob=runif(5), replace=TRUE)
aidData$PC.1s <- 1
subcountyData$trueAid <- expected_aid_ROI(aidData=aidData,
roiData=subcountyData,
roi.prob.aid="probAid_assumed",
aid.project.amount="aid",
aid.precision.code="PC.1s",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country",
aid.pc1.centroid.name="trueSubcounty")
subcountyData$wealth <- subcountyData$trueAid + runif(nrow(subcountyData))
subcountyData$expectedAid <- expected_aid_ROI(aidData=aidData,
aid.project.amount="aid",
aid.precision.code="PC",
aid.pc1.centroid.name="trueSubcounty",
roiData=subcountyData,
roi.prob.aid="probAid_assumed",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country")
naive_model <- lm(wealth ~ expectedAid, data=subcountyData)
geoSIMEX_model <- geoSIMEX(model = naive_model,
geoSIMEXvariable = "expectedAid",
aidData = aidData,
aid.project.amount = "aid",
aid.pc1.centroid.name="trueSubcounty",
aid.precision.code="PC",
roiData = subcountyData,
roi.area = "subcountyArea",
roi.prob.aid = "probAid_assumed",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country")
summary(naive_model)
library(devtools)
install_github("itpir/geoSIMEX")
library(geoSIMEX)
numSubcounties <- 120
numSubcountyInCounty <- 2
numCountyInDistrict <- 3
numDistrictInRegion <- 2
N <- numSubcounties
subcounty <- 1:N
county <- rep(1:(N/numSubcountyInCounty), each=numSubcountyInCounty)
district <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict)), each=(numSubcountyInCounty*numCountyInDistrict))
region <- rep(1:(N/(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion)), each=(numSubcountyInCounty*numCountyInDistrict*numDistrictInRegion))
country <- 1
subcountyArea <- runif(N)
probAid_assumed <- runif(N)
subcountyData <- as.data.frame(cbind(subcounty,county,district,region,country,probAid_assumed,subcountyArea))
numberProjects = 50
aidData <- as.data.frame(matrix(NA,nrow=numberProjects,ncol=3))
names(aidData) <- c("aid","trueSubcounty","PC")
aidData$aid <- runif(nrow(aidData)) * 100
probAid_true <- runif(N)
aidData$trueSubcounty <- sample(size=numberProjects,x=c(1:N), prob=probAid_true, replace=TRUE)
aidData$PC  <- sample(size=numberProjects, x=c(1,2,3,4,6), prob=runif(5), replace=TRUE)
aidData$PC.1s <- 1
subcountyData$trueAid <- expected_aid_ROI(aidData=aidData,
roiData=subcountyData,
roi.prob.aid="probAid_assumed",
aid.project.amount="aid",
aid.precision.code="PC.1s",
roi.pc1.name="subcounty",
roi.pc2.name="county",
roi.pc3.name="district",
roi.pc4.name="region",
roi.pc5.name="region",
roi.pc6.name="country",
aid.pc1.centroid.name="trueSubcounty")
library(devtools)
install_github("itpir/geoSIMEX")
library(geoSIMEX)
library(devtools)
install_github("itpir/geoSIMEX")
library(geoSIMEX)
a = geoSIMEX()
library(devtools)
install_github("itpir/geoSIMEX")
ls()
ls()
setwd("~/Desktop/AidData/MeasureErrorsInEx/geoSIMEX/geoSIMEX")
devtools::document()
